[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "context-optimizer"
version = "1.0.0"
description = "Intelligent context engineering assistant for Multi-Agent Systems"
readme = "../README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "ContextOptimizer Team", email = "example@example.com"}
]

dependencies = [
    "fastapi>=0.110.0",
    "uvicorn>=0.27.0",
    "pydantic>=2.6.0",
    "pydantic-settings>=2.2.0",
    "python-multipart>=0.0.9",
    "langchain-openai>=0.1.0",
    "langchain-core>=0.2.0",
    "anthropic>=0.18.0",
    "httpx>=0.26.0",
    "python-dotenv>=1.0.0",
    "aiofiles>=24.1.0",
    "json-repair>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "httpx>=0.26.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "ruff>=0.2.0",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unused_configs = true

[tool.ruff]
line-length = 100
target-version = "py312"
select = ["E", "F", "B", "I", "N", "UP", "ANN", "S", "A", "C4", "T20", "PT", "RET", "SIM", "ARG"]
ignore = ["ANN101", "ANN102"]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
]
